{"version":3,"sources":["components/AppBar.js","pages/Dashboard/TabPanel.js","pages/Dashboard/Nav.js","pages/Dashboard/index.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","homeButton","color","padding","paddingTop","title","display","breakpoints","up","titleMobile","textAlign","marginTop","spacing","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","marginRight","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","useState","isLoggedIn","setIsLoggedIn","React","anchorEl","setAnchorEl","open","Boolean","login","newState","handleClose","className","AppBar","Typography","variant","noWrap","IconButton","component","Link","to","aria-label","Toolbar","InputBase","placeholder","input","inputProps","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Button","e","TabPanel","children","value","index","other","role","hidden","aria-labelledby","Box","p","generateProps","background","paper","Nav","useTheme","setValue","Tabs","onChange","newValue","indicatorColor","textColor","Tab","label","axis","direction","onChangeIndex","dir","Index","Fragment","App","CssBaseline","exact","path","Dashboard","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yUAiBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,MAAO,OACPC,QAAS,MACTC,WAAY,KAEdC,MAAM,aACJL,SAAU,EACVM,QAAS,QACRR,EAAMS,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,YAAY,aACVT,SAAU,EACVM,QAAS,QACTI,UAAW,SACXC,UAAWb,EAAMc,QAAQ,IACxBd,EAAMS,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbO,OAAO,aACLC,SAAU,WACVC,aAAcjB,EAAMkB,MAAMD,aAC1BE,gBAAiBC,YAAKpB,EAAMqB,QAAQC,OAAOC,MAAO,KAClD,UAAW,CACTJ,gBAAiBC,YAAKpB,EAAMqB,QAAQC,OAAOC,MAAO,MAEpDC,WAAY,EACZC,YAAazB,EAAMc,QAAQ,GAC3BY,MAAO,QACN1B,EAAMS,YAAYC,GAAG,MAAQ,CAC5Bc,WAAYxB,EAAMc,QAAQ,GAC1BY,MAAO,SAGXC,WAAY,CACVtB,QAASL,EAAMc,QAAQ,EAAG,GAC1Bc,OAAQ,OACRZ,SAAU,WACVa,cAAe,OACfrB,QAAS,OACTsB,WAAY,SACZC,eAAgB,UAElBC,UAAW,CACT5B,MAAO,WAET6B,WAAW,aACT5B,QAASL,EAAMc,QAAQ,EAAG,EAAG,EAAG,GAEhCoB,YAAY,cAAD,OAAgBlC,EAAMc,QAAQ,GAA9B,OACXqB,WAAYnC,EAAMoC,YAAYC,OAAO,SACrCX,MAAO,QACN1B,EAAMS,YAAYC,GAAG,MAAQ,CAC5BgB,MAAO,OACP,UAAW,CACTA,MAAO,cAMA,SAASY,IACtB,IAAMC,EAAUzC,IADqB,EAGD0C,oBAAS,GAHR,mBAG9BC,EAH8B,KAGlBC,EAHkB,OAILC,IAAMH,SAAS,MAJV,mBAI9BI,EAJ8B,KAIpBC,EAJoB,KAK/BC,EAAOC,QAAQH,GAEfI,EAAQ,SAACC,GACbP,EAAcO,IAOVC,EAAc,WAClBL,EAAY,OAGd,OACE,yBAAKM,UAAWZ,EAAQtC,MACtB,kBAACmD,EAAA,EAAD,CAAQpC,SAAS,UACf,kBAACqC,EAAA,EAAD,CAAYF,UAAWZ,EAAQ5B,YAAa2C,QAAQ,KAAKC,QAAM,GAC7D,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,IACHC,aAAW,OACXT,UAAWZ,EAAQpC,YAEnB,kBAAC,IAAD,OAPJ,eAWA,kBAAC0D,EAAA,EAAD,KACE,kBAACR,EAAA,EAAD,CAAYF,UAAWZ,EAAQhC,MAAO+C,QAAQ,KAAKC,QAAM,GACvD,kBAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,GAAG,IACHC,aAAW,OACXT,UAAWZ,EAAQpC,YAEnB,kBAAC,IAAD,OAPJ,eAWA,yBAAKgD,UAAWZ,EAAQxB,QACtB,yBAAKoC,UAAWZ,EAAQZ,YACtB,kBAAC,IAAD,OAEF,kBAACmC,EAAA,EAAD,CACEC,YAAY,eACZxB,QAAS,CACPtC,KAAMsC,EAAQP,UACdgC,MAAOzB,EAAQN,YAEjBgC,WAAY,CAAE,aAAc,aAG/BxB,EACC,6BACE,kBAACe,EAAA,EAAD,CACEI,aAAW,0BACXM,gBAAc,cACdC,gBAAc,OACdC,QArDK,SAACC,GAClBxB,EAAYwB,EAAMC,gBAqDNlE,MAAM,WAEN,kBAAC,IAAD,OAEF,kBAACmE,EAAA,EAAD,CACEC,GAAG,cACH5B,SAAUA,EACV6B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,aAAW,EACXC,gBAAiB,CACfH,SAAU,MACVC,WAAY,SAEd7B,KAAMA,EACNgC,QAAS5B,GAET,kBAAC6B,EAAA,EAAD,CAAUX,QAASlB,GAAnB,WACA,kBAAC6B,EAAA,EAAD,CACEtB,UAAWC,IACXC,GAAG,aACHS,QAASlB,GAHX,gBAOA,kBAAC6B,EAAA,EAAD,CACEX,QAAS,WACPlB,IACAF,GAAM,KAHV,YAWJ,kBAACgC,EAAA,EAAD,CAAQZ,QAAS,SAACa,GAAD,OAAOjC,GAAM,IAAO5C,MAAM,WAA3C,Y,sDCvLG,SAAS8E,EAAT,GAAyD,IAArCC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAUC,EAAS,4CACrE,OACE,uCACEC,KAAK,WACLC,OAAQJ,IAAUC,EAClBb,GAAE,8BAAyBa,GAC3BI,kBAAA,yBAAmCJ,IAC/BC,GAEHF,IAAUC,GACT,kBAACK,EAAA,EAAD,CAAKC,EAAG,GACN,kBAACtC,EAAA,EAAD,KAAa8B,K,sBCRjBS,EAAgB,SAACP,GAAD,MAAY,CAChCb,GAAG,kBAAD,OAAoBa,GACtB,gBAAgB,uBAAhB,OAAwCA,KAGpCvF,EAAYC,aAAW,kBAAkB,CAC7CE,KAAM,CACJkB,gBAFyB,EAAGE,QAEHwE,WAAWC,MACpCpE,MAAO,YAII,SAASqE,IACtB,IAAMxD,EAAUzC,IACVE,EAAQgG,cAFc,EAGFrD,IAAMH,SAAS,GAHb,mBAGrB4C,EAHqB,KAGda,EAHc,KAa5B,OACE,yBAAK9C,UAAWZ,EAAQtC,MACtB,kBAACmD,EAAA,EAAD,CAAQpC,SAAS,SAASZ,MAAM,WAC9B,kBAAC8F,EAAA,EAAD,CACEd,MAAOA,EACPe,SAba,SAAC9B,EAAO+B,GAC3BH,EAASG,IAaHC,eAAe,UACfC,UAAU,UACVhD,QAAQ,YACRM,aAAW,2BAEX,kBAAC2C,EAAA,EAAD,eAAKC,MAAM,WAAcZ,EAAc,KACvC,kBAACW,EAAA,EAAD,eAAKC,MAAM,SAAYZ,EAAc,OAGzC,kBAAC,IAAD,CACEa,KAA0B,QAApBzG,EAAM0G,UAAsB,YAAc,IAChDrB,MAAOD,EACPuB,cAtBoB,SAACtB,GACzBY,EAASZ,KAuBL,kBAACH,EAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAGuB,IAAK5G,EAAM0G,WAA7C,0EAGA,kBAACxB,EAAD,CAAUE,MAAOA,EAAOC,MAAO,EAAGuB,IAAK5G,EAAM0G,WAA7C,kDCpDO,SAASG,IACtB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACf,EAAD,O,aCAS,SAASgB,IACtB,OACE,yBAAK5D,UAAU,OACb,kBAAC6D,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAazD,UAAW0D,OCDhCpE,QACW,cAA7BqE,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACX,EAAD,OAEFY,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.2039628c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  Typography,\n  InputBase,\n  Menu,\n  MenuItem,\n  Button\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  homeButton: {\n    color: '#fff',\n    padding: '5px',\n    paddingTop: '0'\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  titleMobile: {\n    flexGrow: 1,\n    display: 'block',\n    textAlign: 'center',\n    marginTop: theme.spacing(1),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    marginRight: theme.spacing(1),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto'\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  }\n}));\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const login = (newState) => {\n    setIsLoggedIn(newState);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Typography className={classes.titleMobile} variant=\"h6\" noWrap>\n          <IconButton\n            component={Link}\n            to=\"/\"\n            aria-label=\"Home\"\n            className={classes.homeButton}\n          >\n            <HomeIcon />\n          </IconButton>\n          App Factory\n        </Typography>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <IconButton\n              component={Link}\n              to=\"/\"\n              aria-label=\"Home\"\n              className={classes.homeButton}\n            >\n              <HomeIcon />\n            </IconButton>\n            App Factory\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          {isLoggedIn ? (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right'\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem\n                  component={Link}\n                  to=\"/dashboard\"\n                  onClick={handleClose}\n                >\n                  My dashboard\n                </MenuItem>\n                <MenuItem\n                  onClick={() => {\n                    handleClose();\n                    login(false);\n                  }}\n                >\n                  Logout\n                </MenuItem>\n              </Menu>\n            </div>\n          ) : (\n            <Button onClick={(e) => login(true)} color=\"inherit\">\n              Login\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography, Box } from '@material-ui/core';\n\nexport default function TabPanel({ children, value, index, ...other }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n","import React from 'react';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport TabPanel from './TabPanel';\n\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\n\nconst generateProps = (index) => ({\n  id: `full-width-tab-${index}`,\n  'aria-controls': `full-width-tabpanel-${index}`\n});\n\nconst useStyles = makeStyles(({ palette }) => ({\n  root: {\n    backgroundColor: palette.background.paper,\n    width: '100%'\n  }\n}));\n\nexport default function Nav() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Summary\" {...generateProps(0)} />\n          <Tab label=\"Posts\" {...generateProps(1)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          Here we can put a quick summary of user stats, maybe with some tables?\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          This can just be the simple listing of posts\n        </TabPanel>\n      </SwipeableViews>\n    </div>\n  );\n}\n","import React from 'react';\nimport Nav from './Nav';\n\nexport default function Index() {\n  return (\n    <React.Fragment>\n      <Nav />\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport AppBar from './components/AppBar';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Dashboard from './pages/Dashboard';\nimport { CssBaseline } from '@material-ui/core';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <Router>\n        <AppBar />\n        <Switch>\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}